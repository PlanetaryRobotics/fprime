<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="../../Autocoders/schema/ISF/component_schema.rng" type="application/xml" schematypens="http://relaxng.org/ns/structure/1.0"?>

<component name="SensorDriver" kind="active" namespace="Drv" modeler="true">

    <import_port_type>Svc/Ping/PingPortAi.xml</import_port_type>
    <import_port_type>Drv/DataTypes/DataBufferPortAi.xml</import_port_type>
    <import_port_type>Fw/Tlm/TlmPortAi.xml</import_port_type>
    <import_port_type>Drv/SpiDriverPorts/SpiReadWritePortAi.xml</import_port_type>
    <import_port_type>Svc/Sched/SchedPortAi.xml</import_port_type>
    <import_port_type>Svc/Cycle/CyclePortAi.xml</import_port_type>
    <import_port_type>Fw/Time/TimePortAi.xml</import_port_type>
    <!--<import_dictionary>Tlm.xml</import_dictionary>
    <import_dictionary>InternalInterface.xml</import_dictionary>-->
    <ports>


        <port name="PingOut" data_type="Svc::Ping"  kind="output"    max_number="1">
        </port>

        <port name="BufferOut" data_type="Drv::DataBuffer"  kind="output"    max_number="1">
        </port>

        <port name="BufferIn" data_type="Drv::DataBuffer"  kind="async_input"    max_number="1">
        </port>

        <port name="Tlm" data_type="Fw::Tlm"  kind="output"    max_number="1">
        </port>

        <port name="SpiRead" data_type="Drv::SpiReadWrite"  kind="async_input"    max_number="2">
        </port>

        <port name="SpiWrite" data_type="Drv::SpiReadWrite"  kind="output"    max_number="2">
        </port>

        <port name="Sched" data_type="Svc::Sched"  kind="async_input"    max_number="1">
        </port>

        <port name="CycleOut" data_type="Svc::Cycle"  kind="output"    max_number="1">
        </port>

        <port name="PingIn" data_type="Svc::Ping"  kind="async_input"    max_number="1">
        </port>

        <port name="Time" data_type="Fw::Time"  kind="output"    max_number="1">
        </port>
    </ports>
    <events>
      <event id="0" name="TILT_LIMIT_REACHED" severity="ACTIVITY_HI" format_string = "The tilt is currently: Pitch: %f Roll: %f Yaw: %f" >
            <comment>
            Tilt limit exceeded
            </comment>
            <args>
                <arg name="pitch" type="F32">
                    <comment>current pitch</comment>
                </arg>
                <arg name="roll" type="F32">
                    <comment>current roll</comment>
                </arg>
                <arg name="yaw" type="F32">
                    <comment>current yaw</comment>
                </arg>
            </args>
        </event>
        <event id="0" name="TILT_RATE_LIMIT_REACHED" severity="ACTIVITY_HI" format_string = "The tilt rate is currently: Pitch: %f Roll: %f Yaw: %f" >
              <comment>
              Rate of tilt exceeds limit
              </comment>
              <args>
                  <arg name="pitch" type="F32">
                      <comment>current angular velocity about the x axis</comment>
                  </arg>
                  <arg name="roll" type="F32">
                      <comment>current angular velocity about the y axis</comment>
                  </arg>
                  <arg name="yaw" type="F32">
                      <comment>current angular velocity about the z axis</comment>
                  </arg>
              </args>
          </event>
          <event id="0" name="ACCEL_INIT_ERROR" severity="ACTIVITY_HI" format_string = "There is an error in initializing the accelerometer" >
                <comment>
                Error in initializing accelerometer
                </comment>
            </event>
          <event id="0" name="GYRO_INIT_ERROR" severity="ACTIVITY_HI" format_string = "There is an error in initializing the gyroscope" >
              <comment>
              Error in initializing gyroscope
              </comment>
          </event>
          <event id="0" name="INVALID_SYSTEM_BUFFER" severity="ACTIVITY_LO" format_string = "Invalid values %d(signal byte) and %d(range byte) received" >
              <comment>
              Error in initializing gyroscope
              </comment>
              <args>
                  <arg name="signalbyte" type="int32">
                      <comment>byte that signals which operation to do</comment>
                  </arg>
                  <arg name="rangebyte" type="int32">
                      <comment>byte that denotes what range to choose</comment>
                  </arg>
              <args>
          </event>
</component>
